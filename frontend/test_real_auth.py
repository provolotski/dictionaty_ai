#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import requests
import json
import getpass
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
API_BASE = 'http://172.16.251.170:9090/api/v1/auth'
TIMEOUT = 10

def test_real_login():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üîê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("=" * 50)
    
    # –ó–∞–ø—Ä–æ—Å —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    username = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    if not username:
        print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return False
    
    password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
    if not password:
        print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        return False
    
    domain = input("–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è 'default'): ").strip()
    if not domain:
        domain = 'default'
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    login_data = {
        'username': username,
        'password': password,
        'domain': domain
    }
    
    print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ {API_BASE}/login")
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
    print(f"   –î–æ–º–µ–Ω: {domain}")
    
    try:
        response = requests.post(
            f"{API_BASE}/login",
            json=login_data,
            headers={'Content-Type': 'application/json'},
            timeout=TIMEOUT
        )
        
        print(f"\nüì• –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        
        if response.status_code == 200:
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
            try:
                data = response.json()
                print(f"   Access Token: {data.get('access_token', '–ù–µ—Ç')[:20]}...")
                print(f"   Refresh Token: {data.get('refresh_token', '–ù–µ—Ç')[:20]}...")
                print(f"   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
                return True
            except Exception as e:
                print(f"   –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                print(f"   –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç: {response.text}")
                return False
        else:
            print("‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
            try:
                error_data = response.json()
                print(f"   –û—à–∏–±–∫–∞: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
            except:
                print(f"   –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
        return False
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_token_validation(access_token):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞"""
    print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞...")
    
    try:
        response = requests.get(
            f"{API_BASE}/validate",
            headers={'Authorization': f'Bearer {access_token}'},
            timeout=TIMEOUT
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω")
            return True
        else:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –ª–æ–≥–∏–Ω–∞
    if test_real_login():
        print("\n‚úÖ –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º—É –ª–æ–≥–∏–Ω–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —Å–µ—Å—Å–∏–∏")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ—à–µ–ª")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ç–∏")

if __name__ == "__main__":
    main()



