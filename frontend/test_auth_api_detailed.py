#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ñ–æ—Ä–º–∞—Ç–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
"""

import requests
import json
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API
API_BASE = 'http://172.16.251.170:9090/api/v1/auth'
TIMEOUT = 10

def test_different_formats():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è /login...")
    
    test_cases = [
        {
            'name': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç',
            'data': {
                'username': 'test_user',
                'password': 'test_password',
                'domain': 'default'
            }
        },
        {
            'name': '–§–æ—Ä–º–∞—Ç –±–µ–∑ –¥–æ–º–µ–Ω–∞',
            'data': {
                'username': 'test_user',
                'password': 'test_password'
            }
        },
        {
            'name': '–§–æ—Ä–º–∞—Ç —Å email',
            'data': {
                'email': 'test@example.com',
                'password': 'test_password'
            }
        },
        {
            'name': '–§–æ—Ä–º–∞—Ç —Å grant_type',
            'data': {
                'username': 'test_user',
                'password': 'test_password',
                'grant_type': 'password'
            }
        },
        {
            'name': '–§–æ—Ä–º–∞—Ç OAuth2',
            'data': {
                'grant_type': 'password',
                'username': 'test_user',
                'password': 'test_password',
                'client_id': 'test_client'
            }
        }
    ]
    
    for test_case in test_cases:
        print(f"\nüìù –¢–µ—Å—Ç: {test_case['name']}")
        print(f"   –î–∞–Ω–Ω—ã–µ: {json.dumps(test_case['data'], ensure_ascii=False)}")
        
        try:
            response = requests.post(
                f"{API_BASE}/login",
                json=test_case['data'],
                headers={'Content-Type': 'application/json'},
                timeout=TIMEOUT
            )
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ –£—Å–ø–µ—Ö!")
                try:
                    data = response.json()
                    print(f"   –û—Ç–≤–µ—Ç: {json.dumps(data, indent=2, ensure_ascii=False)}")
                except:
                    print("   –û—Ç–≤–µ—Ç –Ω–µ JSON")
            elif response.status_code == 401:
                print("   ‚úÖ –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ 401 (–Ω–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)")
            elif response.status_code == 400:
                print("   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ 400 (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)")
                try:
                    error_data = response.json()
                    print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
                except:
                    print("   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã")
            else:
                print(f"   ‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_api_documentation():
    """–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API"""
    print("\nüîç –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ API...")
    
    doc_endpoints = [
        '/docs',
        '/redoc',
        '/openapi.json',
        '/swagger.json',
        '/api-docs',
        '/'
    ]
    
    for endpoint in doc_endpoints:
        try:
            response = requests.get(f"{API_BASE}{endpoint}", timeout=TIMEOUT)
            print(f"   {endpoint}: {response.status_code}")
            if response.status_code == 200:
                print(f"   ‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: {API_BASE}{endpoint}")
        except:
            print(f"   {endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

def test_available_endpoints():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    print("\nüîç –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")
    
    endpoints = [
        '/login',
        '/auth/login',
        '/token',
        '/auth/token',
        '/user/login',
        '/signin',
        '/authenticate'
    ]
    
    for endpoint in endpoints:
        try:
            response = requests.post(
                f"{API_BASE}{endpoint}",
                json={'test': 'data'},
                headers={'Content-Type': 'application/json'},
                timeout=TIMEOUT
            )
            print(f"   {endpoint}: {response.status_code}")
        except:
            print(f"   {endpoint}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    test_different_formats()
    
    # –ü–æ–∏—Å–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    test_api_documentation()
    
    # –ü–æ–∏—Å–∫ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤
    test_available_endpoints()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é API")
    print("   - –£—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å URL —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞")

if __name__ == "__main__":
    main()


