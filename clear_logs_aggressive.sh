#!/bin/bash

# –ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ª–æ–≥–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ Dictionary Management System
# ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –£–î–ê–õ–Ø–ï–¢ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é!
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2025-01-15

echo "‚ö†Ô∏è  –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –õ–û–ì–û–í - –§–ê–ô–õ–´ –ë–£–î–£–¢ –£–î–ê–õ–ï–ù–´ –ü–û–õ–ù–û–°–¢–¨–Æ!"
echo "=================================================================="
echo ""
echo "üî¥ –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é!"
echo "üî¥ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤–∞–∂–Ω—ã—Ö –ª–æ–≥–æ–≤!"
echo ""

# –ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " confirm

if [ "$confirm" != "yes" ]; then
    echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 0
fi

echo ""
echo "üßπ –ù–∞—á–∏–Ω–∞—é –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É –ª–æ–≥–æ–≤..."
echo "======================================"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
remove_logs_in_dir() {
    local dir="$1"
    local dir_name="$2"
    
    if [ -d "$dir" ]; then
        echo "üìÅ –£–¥–∞–ª—è—é –ª–æ–≥–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $dir_name"
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
        local log_files=$(find "$dir" -name "*.log" -type f 2>/dev/null)
        
        if [ -n "$log_files" ]; then
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤
            for log_file in $log_files; do
                echo "   üóëÔ∏è  –£–¥–∞–ª—è—é: $(basename "$log_file")"
                rm -f "$log_file"
            done
            echo "   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: $(echo "$log_files" | wc -w)"
        else
            echo "   ‚ÑπÔ∏è  –§–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        fi
        
        # –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤—ã –ª–æ–≥–æ–≤ (backup —Ñ–∞–π–ª—ã)
        local backup_files=$(find "$dir" -name "*.log.*" -type f 2>/dev/null)
        if [ -n "$backup_files" ]; then
            echo "   üóëÔ∏è  –£–¥–∞–ª—è—é –∞—Ä—Ö–∏–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤:"
            for backup_file in $backup_files; do
                echo "      - $(basename "$back_file")"
                rm -f "$backup_file"
            done
            echo "   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∞—Ä—Ö–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $(echo "$backup_files" | wc -w)"
        fi
        
    else
        echo "   ‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $dir"
    fi
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo ""
echo "üîç –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ª–æ–≥–æ–≤..."

# Frontend –ª–æ–≥–∏
remove_logs_in_dir "frontend/logs" "Frontend"

# Backend –ª–æ–≥–∏
remove_logs_in_dir "backend/logs" "Backend"

# –ö–æ—Ä–Ω–µ–≤—ã–µ –ª–æ–≥–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
remove_logs_in_dir "logs" "Root"

# –ü–æ–∏—Å–∫ –ª–æ–≥–æ–≤ –≤ –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
echo ""
echo "üîç –ü–æ–∏—Å–∫ –ª–æ–≥–æ–≤ –≤ –¥—Ä—É–≥–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö..."

# –ò—â–µ–º –≤—Å–µ .log —Ñ–∞–π–ª—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ
all_log_files=$(find . -name "*.log" -type f 2>/dev/null | grep -v "venv" | grep -v ".git")

if [ -n "$all_log_files" ]; then
    echo "üìã –ù–∞–π–¥–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤:"
    for log_file in $all_log_files; do
        echo "   üìÑ $log_file"
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        rm -f "$log_file"
        echo "      ‚úÖ –£–¥–∞–ª–µ–Ω"
    done
else
    echo "   ‚ÑπÔ∏è  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo ""
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."

# Python –∫—ç—à
if [ -d "__pycache__" ]; then
    echo "   üóëÔ∏è  –£–¥–∞–ª—è—é Python –∫—ç—à..."
    find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null
    echo "      ‚úÖ Python –∫—ç—à –æ—á–∏—â–µ–Ω"
fi

# .pyc —Ñ–∞–π–ª—ã
pyc_files=$(find . -name "*.pyc" -type f 2>/dev/null)
if [ -n "$pyc_files" ]; then
    echo "   üóëÔ∏è  –£–¥–∞–ª—è—é .pyc —Ñ–∞–π–ª—ã..."
    find . -name "*.pyc" -delete 2>/dev/null
    echo "      ‚úÖ .pyc —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã..."

# –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö
mkdir -p frontend/logs backend/logs logs

# Frontend –ª–æ–≥–∏
touch frontend/logs/belstat.log
touch frontend/logs/errors.log
touch frontend/logs/auth.log
touch frontend/logs/django_requests.log

# Backend –ª–æ–≥–∏
touch backend/logs/backend.log
touch backend/logs/errors.log

# Root –ª–æ–≥–∏
touch logs/backend.log
touch logs/frontend.log

echo "   ‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤"

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
echo ""
echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏:"
echo "======================"

# –ü–æ–¥—Å—á–µ—Ç —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤
frontend_logs=$(find frontend/logs -name "*.log" -type f 2>/dev/null | wc -l)
backend_logs=$(find backend/logs -name "*.log" -type f 2>/dev/null | wc -l)
root_logs=$(find logs -name "*.log" -type f 2>/dev/null | wc -l)
total_logs=$((frontend_logs + backend_logs + root_logs))

echo "   üìÅ Frontend –ª–æ–≥–æ–≤: $frontend_logs"
echo "   üìÅ Backend –ª–æ–≥–æ–≤: $backend_logs"
echo "   üìÅ Root –ª–æ–≥–æ–≤: $root_logs"
echo "   üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤: $total_logs"

echo ""
echo "‚úÖ –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üí° –°–æ–≤–µ—Ç: –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ cron:"
echo "   0 2 * * 0 /path/to/project/clear_logs_aggressive.sh  # –ö–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 2:00"
echo ""
echo "üîí –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –°–∫—Ä–∏–ø—Ç —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã"
echo "   –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞."
