#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ Dictionary AI

echo "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ Dictionary AI"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pytest
if ! command -v pytest &> /dev/null; then
    echo "‚ùå pytest –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ pytest:"
    echo "   pip install pytest pytest-asyncio pytest-cov pytest-django httpx"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ backend —Ç–µ—Å—Ç–æ–≤
run_backend_tests() {
    echo ""
    echo "üîß –ó–∞–ø—É—Å–∫ Backend —Ç–µ—Å—Ç–æ–≤..."
    cd backend
    
    if [ -d "venv" ]; then
        source venv/bin/activate
    fi
    
    echo "üìä –¢–µ—Å—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
    pytest tests/test_auth_and_users.py -v --tb=short
    
    echo "üìä –¢–µ—Å—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤..."
    pytest tests/test_dictionary_router.py -v --tb=short
    
    echo "üìä –¢–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤..."
    pytest tests/test_dictionary_service.py -v --tb=short
    
    echo "üìä –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã..."
    pytest tests/test_integration.py -v --tb=short
    
    echo "üìä –í—Å–µ backend —Ç–µ—Å—Ç—ã..."
    pytest tests/ -v --tb=short --cov=. --cov-report=term-missing
    
    cd ..
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend —Ç–µ—Å—Ç–æ–≤
run_frontend_tests() {
    echo ""
    echo "üåê –ó–∞–ø—É—Å–∫ Frontend —Ç–µ—Å—Ç–æ–≤..."
    cd frontend
    
    if [ -d "venv" ]; then
        source venv/bin/activate
    fi
    
    echo "üìä –¢–µ—Å—Ç—ã API views..."
    pytest tests/test_api_views.py -v --tb=short
    
    echo "üìä –¢–µ—Å—Ç—ã Django views..."
    pytest tests/test_views.py -v --tb=short
    
    echo "üìä –í—Å–µ frontend —Ç–µ—Å—Ç—ã..."
    pytest tests/ -v --tb=short --cov=. --cov-report=term-missing
    
    cd ..
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
run_all_tests() {
    echo ""
    echo "üéØ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
    
    # Backend —Ç–µ—Å—Ç—ã
    run_backend_tests
    
    # Frontend —Ç–µ—Å—Ç—ã
    run_frontend_tests
    
    echo ""
    echo "üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—Ä—ã—Ç–∏—è..."
    pytest --cov=. --cov-report=html --cov-report=term-missing
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
run_tests_by_category() {
    local category=$1
    
    case $category in
        "auth")
            echo "üîê –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏..."
            pytest -m auth -v --tb=short
            ;;
        "users")
            echo "üë• –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
            pytest -m users -v --tb=short
            ;;
        "dictionaries")
            echo "üìö –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤..."
            pytest -m dictionaries -v --tb=short
            ;;
        "api")
            echo "üîå –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ API..."
            pytest -m api -v --tb=short
            ;;
        "views")
            echo "üëÅÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ views..."
            pytest -m views -v --tb=short
            ;;
        "backend")
            echo "üîß –ó–∞–ø—É—Å–∫ backend —Ç–µ—Å—Ç–æ–≤..."
            pytest -m backend -v --tb=short
            ;;
        "frontend")
            echo "üåê –ó–∞–ø—É—Å–∫ frontend —Ç–µ—Å—Ç–æ–≤..."
            pytest -m frontend -v --tb=short
            ;;
        "integration")
            echo "üîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
            pytest -m integration -v --tb=short
            ;;
        "unit")
            echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
            pytest -m unit -v --tb=short
            ;;
        *)
            echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: $category"
            echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: auth, users, dictionaries, api, views, backend, frontend, integration, unit"
            exit 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -h, --help           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo "  -a, --all            –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
    echo "  -b, --backend        –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend —Ç–µ—Å—Ç—ã"
    echo "  -f, --frontend       –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ frontend —Ç–µ—Å—Ç—ã"
    echo "  -c, --category CAT   –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
    echo "  -v, --verbose        –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥"
    echo ""
    echo "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–µ—Å—Ç–æ–≤:"
    echo "  auth         - –¢–µ—Å—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"
    echo "  users        - –¢–µ—Å—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
    echo "  dictionaries - –¢–µ—Å—Ç—ã —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤"
    echo "  api          - –¢–µ—Å—Ç—ã API"
    echo "  views        - –¢–µ—Å—Ç—ã Django views"
    echo "  backend      - Backend —Ç–µ—Å—Ç—ã"
    echo "  frontend     - Frontend —Ç–µ—Å—Ç—ã"
    echo "  integration  - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    echo "  unit         - Unit —Ç–µ—Å—Ç—ã"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 --all                    # –í—Å–µ —Ç–µ—Å—Ç—ã"
    echo "  $0 --backend                # –¢–æ–ª—å–∫–æ backend"
    echo "  $0 --category auth          # –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"
    echo "  $0 --category dictionaries  # –¢–æ–ª—å–∫–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-}" in
    -h|--help)
        show_help
        ;;
    -a|--all)
        run_all_tests
        ;;
    -b|--backend)
        run_backend_tests
        ;;
    -f|--frontend)
        run_frontend_tests
        ;;
    -c|--category)
        if [ -z "$2" ]; then
            echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–µ—Å—Ç–æ–≤"
            exit 1
        fi
        run_tests_by_category "$2"
        ;;
    -v|--verbose)
        export PYTEST_ADDOPTS="-v -s --tb=long"
        run_all_tests
        ;;
    "")
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:"
        echo "  1) –í—Å–µ —Ç–µ—Å—Ç—ã"
        echo "  2) –¢–æ–ª—å–∫–æ backend"
        echo "  3) –¢–æ–ª—å–∫–æ frontend"
        echo "  4) –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        echo "  5) –°–ø—Ä–∞–≤–∫–∞"
        echo ""
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): " choice
        
        case $choice in
            1) run_all_tests ;;
            2) run_backend_tests ;;
            3) run_frontend_tests ;;
            4)
                echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: auth, users, dictionaries, api, views, backend, frontend, integration, unit"
                read -p "–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: " category
                run_tests_by_category "$category"
                ;;
            5) show_help ;;
            *) echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" ;;
        esac
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
        show_help
        exit 1
        ;;
esac

echo ""
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
