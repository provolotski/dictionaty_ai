#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Python 3.12
"""

import subprocess
import sys
import os
from pathlib import Path

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n{description}...")
    print(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {command}")
    
    try:
        result = subprocess.run(command, shell=True, check=True, 
                              capture_output=True, text=True)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        if result.stdout:
            print(result.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if e.stdout:
            print("STDOUT:", e.stdout)
        if e.stderr:
            print("STDERR:", e.stderr)
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –¥–ª—è Python 3.12")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    python_version = sys.version_info
    print(f"Python –≤–µ—Ä—Å–∏—è: {python_version.major}.{python_version.minor}.{python_version.micro}")
    
    if python_version.major != 3 or python_version.minor < 12:
        print("‚ö†Ô∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Python 3.12+")
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
    backend_dir = Path(__file__).parent
    os.chdir(backend_dir)
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if Path("venv").exists():
        print("\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        run_command("rm -rf venv", "–£–¥–∞–ª–µ–Ω–∏–µ venv")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    run_command("python3 -m venv venv", "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    activate_script = "venv/bin/activate"
    if not os.path.exists(activate_script):
        activate_script = "venv\\Scripts\\activate"  # –î–ª—è Windows
    
    # –û–±–Ω–æ–≤–ª—è–µ–º pip
    run_command("venv/bin/pip install --upgrade pip", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º wheel –∏ setuptools
    run_command("venv/bin/pip install --upgrade wheel setuptools", 
                "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ wheel –∏ setuptools")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º numpy –æ—Ç–¥–µ–ª—å–Ω–æ (–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ numpy (—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è)...")
    run_command("venv/bin/pip install 'numpy>=1.26.0'", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ numpy")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pandas –æ—Ç–¥–µ–ª—å–Ω–æ
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pandas (—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è)...")
    run_command("venv/bin/pip install 'pandas>=2.2.0'", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ pandas")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    success = run_command("venv/bin/pip install -r requirements_py312.txt", 
                         "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    
    if success:
        print("\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print("\n–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("source venv/bin/activate")
    else:
        print("\n‚ùå –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é:")
        print("source venv/bin/activate")
        print("pip install -r requirements_py312.txt")

if __name__ == "__main__":
    main()
